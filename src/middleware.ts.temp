import { clerkMiddleware, createRouteMatcher } from '@clerk/nextjs/server'
import { NextResponse } from 'next/server'

// Define protected routes that require authentication
const isProtectedRoute = createRouteMatcher([
  '/dashboard(.*)',
  '/admin(.*)',
  '/api/admin(.*)',
  '/api/user(.*)',
  '/api/videos/[id]/progress',
  '/api/payments(.*)',
  '/api/stripe/create-checkout-session',
  '/seminars/[id]/success',
])

// Define public API routes that should bypass auth
const isPublicApiRoute = createRouteMatcher([
  '/api/stripe/webhook',
  '/api/auth/webhook',
  '/api/departments',
  '/api/videos',
  '/api/seminars',
])

export default clerkMiddleware(async (auth, req) => {
  // Allow public API routes without auth
  if (isPublicApiRoute(req)) {
    return NextResponse.next()
  }

  // Protect routes that require authentication
  if (isProtectedRoute(req)) {
    await auth.protect()
  }

  return NextResponse.next()
})

export const config = {
  matcher: ['/((?!.+\\.[\\w]+$|_next).*)', '/', '/(api|trpc)(.*)'],
}