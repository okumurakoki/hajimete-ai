// Temporary SQLite schema for local development
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Basic models for demo
model User {
  id             String   @id @default(uuid())
  clerkId        String   @unique @map("clerk_id")
  email          String   @unique
  plan           String   @default("basic")
  subscriptionId String?  @map("subscription_id")
  status         String   @default("active")
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @default(now()) @updatedAt @map("updated_at")

  @@map("users")
}

model Department {
  id             String   @id @default(uuid())
  name           String   @unique
  slug           String   @unique
  description    String?
  colorPrimary   String?  @map("color_primary")
  colorSecondary String?  @map("color_secondary")
  icon           String?
  accessLevel    String   @default("basic") @map("access_level")
  sortOrder      Int      @default(0) @map("sort_order")
  isActive       Boolean  @default(true) @map("is_active")
  createdAt      DateTime @default(now()) @map("created_at")

  videos Video[]

  @@map("departments")
}

model Video {
  id             String    @id @default(uuid())
  title          String
  description    String?
  slug           String?   @unique
  vimeoId        String?   @unique @map("vimeo_id")
  thumbnailUrl   String?   @map("thumbnail_url")
  duration       Int?      // seconds
  departmentId   String    @map("department_id")
  level          String    @default("beginner")
  isPremium      Boolean   @default(false) @map("is_premium")
  instructorId   String?   @map("instructor_id")
  instructorName String?   @map("instructor_name")
  status         String    @default("draft")
  viewCount      Int       @default(0) @map("view_count")
  likeCount      Int       @default(0) @map("like_count")
  averageRating  Float     @default(0.0) @map("average_rating")
  publishedAt    DateTime? @map("published_at")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @default(now()) @updatedAt @map("updated_at")

  department Department @relation(fields: [departmentId], references: [id])

  @@map("videos")
}

model SubscriptionPlan {
  id                       String   @id @default(uuid())
  name                     String
  slug                     String   @unique
  description              String?
  priceMonthly             Int      @map("price_monthly") // in cents (JPY)
  priceYearly              Int?     @map("price_yearly") // in cents (JPY)
  stripePriceIdMonthly     String?  @map("stripe_price_id_monthly")
  stripePriceIdYearly      String?  @map("stripe_price_id_yearly")
  maxSimultaneousStreams   Int      @default(1) @map("max_simultaneous_streams")
  downloadEnabled          Boolean  @default(false) @map("download_enabled")
  offlineViewing           Boolean  @default(false) @map("offline_viewing")
  isActive                 Boolean  @default(true) @map("is_active")
  sortOrder                Int      @default(0) @map("sort_order")
  createdAt                DateTime @default(now()) @map("created_at")

  @@map("subscription_plans")
}